section	.text
	global _start       ;must be declared for using gcc
_start:                     ;tell linker entry point
    ; move the data from memory into registers
    mov eax, [num1]
    mov ebx, [num2]
    mov ecx, [num3]
    
    ; add the data and store in register A
    add eax, ebx
    add eax, ecx
    add eax, '0' ;convrts from number to ASCII value
    mov [result], eax
    
    ; printing the message
	mov	edx, len    ;message length
	mov	ecx, msg    ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel

    ; printing the numerical result
	mov	edx, 1    ;message length
	mov	ecx, result    ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel
	
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data

msg	db	'The sum of the three numbers is ',0xa	;our dear string
len	equ	$ - msg			;length of our dear string
num1 db 5
num2 db 1
num3 db 2

section .bss
result resb 1
